# Exercise 1
# Iterate through the list so that if the character ‘m’ is in the string, then it should be added to a new list called m_list. Hint: Because this isn’t just a list of lists, 
# think about what type of object you want your data to be stored in. Conditionals may help you.


d = ['good morning', 'hello', 'chair', 'python', ['music', 'flowers', 'facebook', 'instagram', 'snapchat', ['On my Own', 'monster', 'Words dont come so easily',
'lead me right']], 'Stressed Out', 'Pauver Coeur', 'Reach for Tomorrow', 'mariners song', 'Wonder sleeps here']

m_list = []

for data in d:
    if type(data) == str:
        if 'm' in data:
            m_list.append(data)
    elif type(data) == list:
        for song in data:
            if type(song) == str:
                if 'm' in song:
                    m_list.append(song)
            elif type(song) == list:
                for word in song:
                    if 'm' in word:
                        m_list.append(word)
print(m_list)




# Exercise 2
# The nested dictionary, pokemon, shows the number of various Pokemon that each person has caught while playing Pokemon Go. Find the total number of rattatas, dittos, 
# and pidgeys caught and assign to the variables r, d, and p respectively. Do not hardcode. Note: Be aware that not every trainer has caught a ditto.


pokemon = {'Trainer1':
          {'normal': {'rattatas':15, 'eevees': 2, 'ditto':1}, 'water': {'magikarps':3}, 'flying': {'zubats':8, 'pidgey': 12}},
          'Trainer2':
          {'normal': {'rattatas':25, 'eevees': 1}, 'water': {'magikarps':7}, 'flying': {'zubats':3, 'pidgey': 15}},
          'Trainer3':
          {'normal': {'rattatas':10, 'eevees': 3, 'ditto':2}, 'water': {'magikarps':2}, 'flying': {'zubats':3, 'pidgey': 20}},
          'Trainer4':
          {'normal': {'rattatas':17, 'eevees': 1}, 'water': {'magikarps':9}, 'flying': {'zubats':12, 'pidgey': 14}}}

r = 0
d = 0
p = 0

for trainer in pokemon.values():
    for score in trainer.values():
        for word in score:
            if word == 'ditto':
                d += score['ditto']
            elif word == 'rattatas':
                r += score['rattatas']
            elif word == 'pidgey':
                p += score['pidgey']
print(r, d, p)



# Exercise 3
# Below, we have provided a nested list called big_list. Use nested iteration to create a dictionary, word_counts, that contains all the words in big_list as keys, 
# and the number of times they occur as values.

big_list = [[['one', 'two'], ['seven', 'eight']], [['nine', 'four'], ['three', 'one']], [['two', 'eight'], ['seven', 'four']], [['five', 'one'], ['four', 'two']], 
[['six', 'eight'], ['two', 'seven']], [['three', 'five'], ['one', 'six']], [['nine', 'eight'], ['five', 'four']], [['six', 'three'], ['four', 'seven']]]

word_counts = {}

for lvl1 in big_list:
    for lvl2 in lvl1:
        for lvl3 in lvl2:
            if lvl3 in word_counts:
                word_counts[lvl3] = word_counts[lvl3] + 1
            else:
                word_counts[lvl3] = 1

                
